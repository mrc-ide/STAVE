[{"path":"/articles/input_formats.html","id":"a-custom-data-class","dir":"Articles","previous_headings":"","what":"A custom data class","title":"Input Data Formats","text":"mentioned previous page, STAVE adopts relational database structure connects three tables together via linked IDs. implemented single class (R6 object) acts main data container. class allows users efficiently import, store, manipulate genetic data via specialized member functions. example, new object can created data read like : Using custom class offers several key advantages. loaded, data remain consolidated within single object, avoiding fragmentation across separate objects. Additionally, class structure ensures data “encapsulated”, meaning directly edited user. built-protection minimizes risk accidental data corruption. STAVE also performs nearly 100 rigorous checks data import process. checks cover wide range validations, ensuring proper character formatting verifying prevalence values exceed 100%. data pass checks, successfully loaded object. , import rejected, informative error message provided. core principle STAVE modify input data import. instance, column headers dataset contain capital letters lowercase allowed, STAVE automatically convert — even though ! strict approach shifts responsibility data formatting user, ensuring () fully aware exact structure input data. remainder page lists formatting requirements three tables.","code":"# create new object s <- STAVE_object$new()  # append data using a member function s$append_data(studies_dataframe = df_studies,               surveys_dataframe = df_surveys,               counts_dataframe = df_counts)"},{"path":"/articles/input_formats.html","id":"the-studies-table","dir":"Articles","previous_headings":"","what":"The Studies table","title":"Input Data Formats","text":"table captures information origin data. example correctly formatted Studies table given : mandatory fields study_id url, provide minimum information required link tables identify data source. crucial ensure URLs accurate permanent, serve sole external reference verifying origin data. fields optional, meaning cells can left blank, though column headings still included. optional fields minimal formatting requirements primarily intended storing descriptive information help quickly identify study. exception study_type, must adhere predefined set options (see ).","code":""},{"path":"/articles/input_formats.html","id":"study-ids","dir":"Articles","previous_headings":"The Studies table","what":"Study IDs","title":"Input Data Formats","text":"Study IDs must valid identifiers, means must: Contain English letters (uppercase lowercase), numbers (0-9), underscores (_). begin number underscore. Beyond restrictions, naming convention can used. However, recommended adopt systematic approach avoid potential conflicts future. instance, using generic IDs like “study1” advisable, IDs overlap datasets, causing issues combining data. better approach use concise, descriptive format, first author’s surname year publication, e.g., Bloggs_2024.","code":""},{"path":"/articles/input_formats.html","id":"data-types","dir":"Articles","previous_headings":"The Studies table","what":"Data types","title":"Input Data Formats","text":"column rules data type: Note entries study_type private warning message printed data imported. prevent data loading, flags user case intentional.","code":""},{"path":"/articles/input_formats.html","id":"the-surveys-table","dir":"Articles","previous_headings":"","what":"The Surveys table","title":"Input Data Formats","text":"table captures information context within data collected. example correctly formatted Surveys table given : table must include latitude, longitude, collection day, essential data tied specific point space time. However, may instances information directly available raw data. example, location might reported regional level, collection period might span entire season. Despite , STAVE enforces requirement data reported single point space time, fundamental prerequisite certain types spatial analysis. exact locations timings unavailable, imputation may necessary. instance, might use centroid region location midpoint collection range timing. cases, optional fields (e.g. spatial_notes, time_notes) table provide space document raw data manipulated, ensuring transparency reproducibility data preparation process.","code":""},{"path":"/articles/input_formats.html","id":"survey-ids","dir":"Articles","previous_headings":"The Surveys table","what":"Survey IDs","title":"Input Data Formats","text":"Similar study IDs, survey IDs must also valid identifiers. Additionally, must satisfy relational linking directions: study_key Surveys table must correspond existing study_id Studies table, survey_id must referenced survey_key column Counts table. Survey IDs can reused across different studies, must remain unique within study. example, two studies can include survey ID “south_district” without issues, long ID duplicated within single study. ensures integrity relational links allowing flexibility across studies.","code":""},{"path":"/articles/input_formats.html","id":"collection-times","dir":"Articles","previous_headings":"The Surveys table","what":"Collection times","title":"Input Data Formats","text":"Storing dates always thorny issue many different conventions. STAVE requires dates stored YYYY-MM-DD format, example valid date 2024-01-19. avoids confusion caused regional date formats, example MM/DD/YYYY common US vs. DD/MM/YYYY common Europe. also added advantage sortable numerically. Dates represented character strings follow convention. need convert Date class using packages like lubridate, fact rejected.","code":""},{"path":"/articles/input_formats.html","id":"data-types-1","dir":"Articles","previous_headings":"The Surveys table","what":"Data types","title":"Input Data Formats","text":"column rules data type: next page goes detail long string format used encode genetic variants.","code":""},{"path":"/articles/installation.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installation","text":"can install recent version STAVE using: good practice specify version number ensure future users exactly version loaded. install specific version can use following format: see latest version number.","code":"# install.packages(\"devtools\") devtools::install_github(\"mrc-ide/STAVE\") devtools::install_github(\"mrc-ide/STAVE@v1.0.0\")"},{"path":"/articles/reading_in_data.html","id":"example-workflow","dir":"Articles","previous_headings":"","what":"Example workflow","title":"Reading in Data","text":"Input data take form three tables. use pre-loaded example data , using data need match input format: Create STAVE object append data: data loaded, can always view different tables using get functions. However, alter values directly. can calculate prevalence variant using get_prevalence(): can also return list variants data: Finally, can selectively drop studies data using study ID:","code":"library(STAVE)  data(\"example_input\") # create new object s <- STAVE_object$new()  # append data using a member function s$append_data(studies_dataframe = example_input$studies,               surveys_dataframe = example_input$surveys,               counts_dataframe = example_input$counts) #> data correctly appended # check how many studies are now loaded s #> Studies: 7 #> Surveys: 24 s$get_studies() |> head() #> # A tibble: 6 × 6 #>   study_id            study_name       study_type authors publication_year url   #>   <chr>               <chr>            <chr>      <chr>              <dbl> <chr> #> 1 wwarn_10297_Nelson  wwarn_10297_Nel… peer_revi… Nelson              1000 http… #> 2 wwarn_10814_Dama    wwarn_10814_Dama peer_revi… Dama                1000 http… #> 3 wwarn_10992_Mallick wwarn_10992_Mal… peer_revi… Mallick             1000 http… #> 4 wwarn_11208_Kunasol wwarn_11208_Kun… peer_revi… Kunasol             1000 http… #> 5 wwarn_11435_Henry   wwarn_11435_Hen… peer_revi… Henry               1000 http… #> 6 wwarn_11720_Ould    wwarn_11720_Ould peer_revi… Ould                1000 http… s$get_surveys() |> head() #> # A tibble: 6 × 11 #>   study_key    survey_id country_name site_name latitude longitude spatial_notes #>   <chr>        <chr>     <chr>        <chr>        <dbl>     <dbl> <chr>         #> 1 wwarn_10297… wwarn_10… Thailand     Kanchana…     15.3     98.5  wwarn lat an… #> 2 wwarn_10814… wwarn_10… Mali         Koulikoro     12.6     -8.14 wwarn lat an… #> 3 wwarn_10992… wwarn_10… India        Chhattis…     20.1     80.8  wwarn lat an… #> 4 wwarn_10992… wwarn_10… India        Goa           15.3     74.1  wwarn lat an… #> 5 wwarn_10992… wwarn_10… India        Gujarat       23.0     73.6  wwarn lat an… #> 6 wwarn_10992… wwarn_10… India        Heilongj…     88.3     27.2  wwarn lat an… #> # ℹ 4 more variables: collection_start <chr>, collection_end <chr>, #> #   collection_day <chr>, time_notes <chr> s$get_counts() |> head() #> # A tibble: 6 × 4 #>   survey_key                           variant_string variant_num total_num #>   <chr>                                <chr>                <dbl>     <dbl> #> 1 wwarn_10297_Nelson_Sangkhlaburi_2002 mdr1:184:F              27        49 #> 2 wwarn_10297_Nelson_Sangkhlaburi_2002 mdr1:86:Y                4        49 #> 3 wwarn_10814_Dama_Bamako_2014         crt:76:T               130       170 #> 4 wwarn_10814_Dama_Bamako_2014         mdr1:86:Y               46       158 #> 5 wwarn_10992_Mallick_Assam_2002       crt:76:T                26        26 #> 6 wwarn_10992_Mallick_Assam_2002       mdr1:86:Y               19        25 p <- s$get_prevalence(\"mdr1:184:F\") p #> # A tibble: 24 × 21 #>    study_id       study_name study_type authors publication_year url   survey_id #>    <chr>          <chr>      <chr>      <chr>              <dbl> <chr> <chr>     #>  1 wwarn_10297_N… wwarn_102… peer_revi… Nelson              1000 http… wwarn_10… #>  2 wwarn_10814_D… wwarn_108… peer_revi… Dama                1000 http… wwarn_10… #>  3 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #>  4 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #>  5 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #>  6 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #>  7 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #>  8 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #>  9 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #> 10 wwarn_10992_M… wwarn_109… peer_revi… Mallick             1000 http… wwarn_10… #> # ℹ 14 more rows #> # ℹ 14 more variables: country_name <chr>, site_name <chr>, latitude <dbl>, #> #   longitude <dbl>, spatial_notes <chr>, collection_start <chr>, #> #   collection_end <chr>, collection_day <chr>, time_notes <chr>, #> #   numerator <dbl>, denominator <dbl>, prevalence <dbl>, #> #   prevalence_lower <dbl>, prevalence_upper <dbl> s$get_variants() #> [1] \"crt:76:T\"   \"k13:469:F\"  \"k13:469:Y\"  \"k13:539:T\"  \"k13:580:Y\"  #> [6] \"k13:675:V\"  \"mdr1:184:F\" \"mdr1:86:Y\" s$drop_study(drop_study_id = \"wwarn_10297_Nelson\") s #> Studies: 6 #> Surveys: 23"},{"path":"/articles/relational_structure.html","id":"whats-the-issue","dir":"Articles","previous_headings":"","what":"What’s the issue?","title":"The Relational Data Structure","text":"Imagine ’ve extracted data genetic variants academic paper now building data table organize results. Often, single paper yield multiple entries — example, row might correspond different sampling location. ensure others can trace results back original source, ’ll need include information paper table, example author list year publication. However, raises issue: duplicate paper details every row table? one hand, duplicating information ensures variant counts always linked source, crucial reproducibility. hand, introduces redundancy, increasing file size unnecessarily heightening risk data entry errors.","code":""},{"path":"/articles/relational_structure.html","id":"the-solution","dir":"Articles","previous_headings":"","what":"The solution","title":"The Relational Data Structure","text":"Fortunately, common class problem, well-known solution use relational database structure. approach, unique IDs employed link fields across multiple tables. One table store metadata paper (e.g., authors, year publication etc.), second table hold data genetic variants (e.g., gene name, counts). two tables connected relational key, key tables links related information. setup avoids redundancy, minimizes errors, maintains clear link data source. STAVE, split data three tables: Studies: record data came . academic publications, reports, sources. Surveys: survey defined discrete instance data collection. Survey-level data include information location (latitude longitude) time (day) collection. may multiple surveys within given study, example different sampling sites different collection periods may come academic publication. Counts: aggregate genetic data stored. Data include name variant observed (.e. gene, locus, mutation), many times observed, many times successfully tested . tables linked together two sets keys; Studies--Surveys, Surveys--Counts.","code":""},{"path":"/articles/relational_structure.html","id":"why-use-an-r-package","dir":"Articles","previous_headings":"","what":"Why use an R package?","title":"The Relational Data Structure","text":"many software platforms specifically designed managing relational databases, notable examples MySQL Oracle. STAVE written R? reasons : R language choice, making fastest option develop maintain package. Many downstream tools written R, making convenient stay within environment. Although R missing advanced features solutions tailored relational databases (e.g. allowing synchronous editing avoiding clashes), also needed simple application. time, R excellent capabilities writing general functions, e.g. visualisation mapping. next page goes specific formatting requirements three linked tables.","code":""},{"path":"/articles/tutorial_basic.html","id":"example-workflow","dir":"Articles","previous_headings":"","what":"Example workflow","title":"tutorial_basic","text":"Input data take form three tables. use pre-loaded example data , using data need match input format: Create STAVE object append data: data loaded, can always view different tables using get functions. However, alter values directly. can calculate prevalence variant using get_prevalence(): can also return list variants data: Finally, can selectively drop studies data using study ID:","code":"library(STAVE)  data(\"example_input\") #View(example_input$studies) #View(example_input$surveys) #View(example_input$counts) # create new object s <- STAVE_object$new()  # append data using a member function s$append_data(studies_dataframe = example_input$studies,               surveys_dataframe = example_input$surveys,               counts_dataframe = example_input$counts) #> data correctly appended # check how many studies are now loaded s #> Studies: 7 #> Surveys: 24 s$get_studies() |> head() #> # A tibble: 6 × 6 #>   study_ID            study_name       study_type authors publication_year url   #>   <chr>               <chr>            <chr>      <chr>              <dbl> <chr> #> 1 wwarn_10297_Nelson  wwarn_10297_Nel… peer_revi… Nelson              1000 http… #> 2 wwarn_10814_Dama    wwarn_10814_Dama peer_revi… Dama                1000 http… #> 3 wwarn_10992_Mallick wwarn_10992_Mal… peer_revi… Mallick             1000 http… #> 4 wwarn_11208_Kunasol wwarn_11208_Kun… peer_revi… Kunasol             1000 http… #> 5 wwarn_11435_Henry   wwarn_11435_Hen… peer_revi… Henry               1000 http… #> 6 wwarn_11720_Ould    wwarn_11720_Ould peer_revi… Ould                1000 http… s$get_surveys() |> head() #> # A tibble: 6 × 11 #>   study_key           survey_ID country_name site_name   lat   lon spatial_notes #>   <chr>               <chr>     <chr>        <chr>     <dbl> <dbl> <chr>         #> 1 wwarn_10297_Nelson  wwarn_10… Thailand     Kanchana…  15.3 98.5  wwarn lat an… #> 2 wwarn_10814_Dama    wwarn_10… Mali         Koulikoro  12.6 -8.14 wwarn lat an… #> 3 wwarn_10992_Mallick wwarn_10… India        Chhattis…  20.1 80.8  wwarn lat an… #> 4 wwarn_10992_Mallick wwarn_10… India        Goa        15.3 74.1  wwarn lat an… #> 5 wwarn_10992_Mallick wwarn_10… India        Gujarat    23.0 73.6  wwarn lat an… #> 6 wwarn_10992_Mallick wwarn_10… India        Heilongj…  88.3 27.2  wwarn lat an… #> # ℹ 4 more variables: collection_start <chr>, collection_end <chr>, #> #   collection_day <chr>, time_notes <chr> s$get_counts() |> head() #> # A tibble: 6 × 4 #>   survey_key                           variant_string variant_num total_num #>   <chr>                                <chr>                <dbl>     <dbl> #> 1 wwarn_10297_Nelson_Sangkhlaburi_2002 mdr1:184:F              27        49 #> 2 wwarn_10297_Nelson_Sangkhlaburi_2002 mdr1:86:Y                4        49 #> 3 wwarn_10814_Dama_Bamako_2014         crt:76:T               130       170 #> 4 wwarn_10814_Dama_Bamako_2014         mdr1:86:Y               46       158 #> 5 wwarn_10992_Mallick_Assam_2002       crt:76:T                26        26 #> 6 wwarn_10992_Mallick_Assam_2002       mdr1:86:Y               19        25 p <- s$get_prevalence(\"mdr1:184:F\") #View(p) s$get_variants() #> [1] \"crt:76:T\"   \"k13:469:F\"  \"k13:469:Y\"  \"k13:539:T\"  \"k13:580:Y\"  #> [6] \"k13:675:V\"  \"mdr1:184:F\" \"mdr1:86:Y\" s$drop_study(drop_study_ID = \"wwarn_10297_Nelson\") s #> Studies: 6 #> Surveys: 23"},{"path":"/articles/variant_strings.html","id":"flexible-encoding-genetic-variants","dir":"Articles","previous_headings":"","what":"3. Flexible encoding genetic variants","title":"Encoding Variants as Strings","text":"Encoding Plasmodium genetic data can challenging due complexity variability information involved. Sequence data may recorded single-codon level across multiple codons, heterozygous calls — one allele observed — can occur codons others. heterozygous calls may also phased unphased, adding another layer detail. Furthermore, patterns missingness can vary individuals, causing denominator vary look along genome. many cases, particularly working aggregate counts extracted published studies, detailed information may incomplete entirely unavailable. Therefore, require encoding system flexible expressive: capable capturing complexity data available, overly restrictive situations certain aspects missing. drawback flexible encoding calculating prevalence becomes less straightforward. trade-somewhat unavoidable, flexibility data encoding simplicity prevalence calculation somewhat opposing goals. STAVE, prioritize achieving clean flexible data structure, ensuring relevant information captured. Prevalence calculations performed using dedicated member functions operate encoded data. next page goes calculate prevalence.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bob Verity. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Verity B (2024). STAVE: Spatial-Temporal Aggregated Variant Encoding. R package version 1.1.0.","code":"@Manual{,   title = {STAVE: Spatial-Temporal Aggregated Variant Encoding},   author = {Bob Verity},   year = {2024},   note = {R package version 1.1.0}, }"},{"path":"/reference/STAVE_object.html","id":null,"dir":"Reference","previous_headings":"","what":"STAVE data object (R6 class) — STAVE_object","title":"STAVE data object (R6 class) — STAVE_object","text":"main class stores data responsible data input, output, processing functions. functionality STAVE package class form member functions.","code":""},{"path":"/reference/STAVE_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"STAVE data object (R6 class) — STAVE_object","text":"raw data stored private variables within object, meaning () edited directly. Rather, tables can extracted using get_counts() similarly tables. three tables : studies: Information data came , example url     author names. study indexed unique study_id. surveys: Information surveys represented within study.     survey defined discrete instance data collection,     includes information geography (latitude longitude) collection     time. Surveys given survey_ids linked particular study     study_id. counts: actual genetic information, linked     particular survey survey_id. Genetic variants encoded     character strings must follow specified format, number     times variant observed among total sample stored     columns. combination linked tables allows efficient flexible encoding variants, avoiding unnecessary duplication information.","code":""},{"path":[]},{"path":"/reference/STAVE_object.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"STAVE data object (R6 class) — STAVE_object","text":"STAVE_object$print() STAVE_object$get_studies() STAVE_object$get_surveys() STAVE_object$get_counts() STAVE_object$get_version() STAVE_object$append_data() STAVE_object$get_prevalence() STAVE_object$get_variants() STAVE_object$drop_study() STAVE_object$clone()","code":""},{"path":"/reference/STAVE_object.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"STAVE data object (R6 class) — STAVE_object","text":"Custom print method control console output","code":""},{"path":"/reference/STAVE_object.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$print()"},{"path":"/reference/STAVE_object.html","id":"method-get-studies-","dir":"Reference","previous_headings":"","what":"Method get_studies()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract studies data.frames stored within object","code":""},{"path":"/reference/STAVE_object.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_studies()"},{"path":"/reference/STAVE_object.html","id":"method-get-surveys-","dir":"Reference","previous_headings":"","what":"Method get_surveys()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract surveys data.frames stored within object","code":""},{"path":"/reference/STAVE_object.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_surveys()"},{"path":"/reference/STAVE_object.html","id":"method-get-counts-","dir":"Reference","previous_headings":"","what":"Method get_counts()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract counts data.frames stored within object","code":""},{"path":"/reference/STAVE_object.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_counts()"},{"path":"/reference/STAVE_object.html","id":"method-get-version-","dir":"Reference","previous_headings":"","what":"Method get_version()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract version number STAVE object. important member functions STAVE object directly linked object , updated updating version package environment. update STAVE object new package version, first extract data load new STAVE object created recent version.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_version()"},{"path":"/reference/STAVE_object.html","id":"method-append-data-","dir":"Reference","previous_headings":"","what":"Method append_data()","title":"STAVE data object (R6 class) — STAVE_object","text":"Append new data","code":""},{"path":"/reference/STAVE_object.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$append_data(   studies_dataframe,   surveys_dataframe,   counts_dataframe )"},{"path":"/reference/STAVE_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"studies_dataframe data.frame containing information study level. data.frame must following columns: study_id, study_name, study_type, authors, publication_year, url surveys_dataframe data.frame containing information survey level. data.frame must following columns: study_key, survey_id, country_name, site_name, latitude, longitude, spatial_notes, collection_start, collection_end, time_notes. study_key element must correspond study_id studies_dataframe. counts_dataframe data.frame genetic information. Must contain following columns: survey_key, variant_string, variant_num, total_num. survey_key element must correspond valid survey_id surveys_dataframe.","code":""},{"path":"/reference/STAVE_object.html","id":"method-get-prevalence-","dir":"Reference","previous_headings":"","what":"Method get_prevalence()","title":"STAVE data object (R6 class) — STAVE_object","text":"Calculate prevalence","code":""},{"path":"/reference/STAVE_object.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_prevalence(   target_variant,   keep_ambiguous = FALSE,   prev_from_min = TRUE )"},{"path":"/reference/STAVE_object.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"target_variant name variant want calculate prevalence, example crt:72:C. Note can heterozygous calls within name. keep_ambiguous may variants data target_variant sample, proven conclusively. example, sequence A_A_A may match sequence /C_A/C_A may , unphased genotypes sure. keep_ambiguous = TRUE min max numerator reported either exclude ambiguous calls (min) include ambiguous calls (max). FALSE (default) min reported. prev_from_min output object includes point estimate prevalence along exact binomial confidence intervals. must calculated one numerator_min numerator_max case ambiguous calls. argument sets one numerators used calculation. @import dplyr","code":""},{"path":"/reference/STAVE_object.html","id":"method-get-variants-","dir":"Reference","previous_headings":"","what":"Method get_variants()","title":"STAVE data object (R6 class) — STAVE_object","text":"Return vector variants present data object.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_variants(report_haplo = FALSE)"},{"path":"/reference/STAVE_object.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"report_haplo (Boolean) TRUE list haplotypes. Otherwise, list locus--locus format. Defaults FALSE.","code":""},{"path":"/reference/STAVE_object.html","id":"method-drop-study-","dir":"Reference","previous_headings":"","what":"Method drop_study()","title":"STAVE data object (R6 class) — STAVE_object","text":"Drop one study_ids data. drop internally stored data objects, including corresponding surveys counts data.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$drop_study(drop_study_id)"},{"path":"/reference/STAVE_object.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"drop_study_id vector study_ids drop data objects.","code":""},{"path":"/reference/STAVE_object.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"STAVE data object (R6 class) — STAVE_object","text":"objects class cloneable method.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$clone(deep = FALSE)"},{"path":"/reference/STAVE_object.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"deep Whether make deep clone.","code":""},{"path":"/reference/allowed_amino_acids.html","id":null,"dir":"Reference","previous_headings":"","what":"String of allowed amino acids — allowed_amino_acids","title":"String of allowed amino acids — allowed_amino_acids","text":"Returns data.frame allowed amino acid single-letter codes. come IUPAC (International Union Pure Applied Chemistry), see details. Variants defined variant_string column counts data.frame must one single-letter codes, otherwise underscore (_), pipe (|) forward slash (/) symbols. Underscores removed allowed improved readability. pipe forward slash symbols represent phased unphased mixed calls, respectively.","code":""},{"path":"/reference/allowed_amino_acids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String of allowed amino acids — allowed_amino_acids","text":"","code":"allowed_amino_acids()"},{"path":"/reference/disallowed_variant_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Examples of invalid variant strings — disallowed_variant_strings","title":"Examples of invalid variant strings — disallowed_variant_strings","text":"Returns data.frame invalid variant strings, along reason invalid. Can useful understanding correct format. Also, data.frame used internal package testing, .e. every row data.frame return error.","code":""},{"path":"/reference/disallowed_variant_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Examples of invalid variant strings — disallowed_variant_strings","text":"","code":"disallowed_variant_strings()"},{"path":"/reference/example_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Input Dataset — example_input","title":"Example Input Dataset — example_input","text":"list containing three data.frames make STAVE object. correctly formatted, can used reference formatting data. studies come much reduced version WWARN data antimalaria resistance.","code":""},{"path":"/reference/example_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Input Dataset — example_input","text":"","code":"example_input"},{"path":"/reference/example_input.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Input Dataset — example_input","text":"list containing three data.frames","code":""},{"path":"/reference/example_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Input Dataset — example_input","text":"","code":"data(\"example_input\", package = \"STAVE\")"}]
