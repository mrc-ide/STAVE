[{"path":"/articles/Installation.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installation","text":"can install recent version STAVE using: good practice specify version number scripts ensure future users exactly version loaded. install specific version can use format: see latest version number.","code":"# install.packages(\"devtools\") devtools::install_github(\"mrc-ide/STAVE\") devtools::install_github(\"mrc-ide/STAVE@v1.0.0\")"},{"path":"/articles/data_format.html","id":"avoiding-duplication-of-information","dir":"Articles","previous_headings":"","what":"1. Avoiding duplication of information","title":"data_format","text":"STAVE achieves relatively efficient encoding relational database structure. three tables make database: Studies: record data came . academic publications, reports, sources information. Surveys: survey defined discrete instance data collection. Survey-level data include information location (latitude longitude) time (day) collection. may multiple surveys within given study, example different sampling sites different collection periods may come academic publication. Counts: aggregate genetic data stored. Data include name variant observed (.e. gene, locus, mutation), many times observed, many times successfully tested . Separating data tables helps eliminate duplication improve efficiency. instance, data originate academic paper, list authors typically apply surveys reported within paper. Repeating information survey inefficient also increases risk data entry errors. address , store shared information, authorship, study level link survey-level data using relational key. approach ensures information stored maintaining clear connections studies associated surveys.","code":""},{"path":"/articles/data_format.html","id":"nailing-down-the-input-format","dir":"Articles","previous_headings":"","what":"2. Nailing down the input format","title":"data_format","text":"STAVE performs close 100 different checks data read . includes everything character formatting checking prevalence exceed 100%. extremely pedantic series checks ensures know exactly loaded, makes life easier comes downstream analysis.","code":""},{"path":"/articles/data_format.html","id":"flexible-encoding-genetic-variants","dir":"Articles","previous_headings":"","what":"3. Flexible encoding genetic variants","title":"data_format","text":"Encoding Plasmodium genetic data can challenging due complexity variability information involved. Sequence data may recorded single-codon level across multiple codons, heterozygous calls — one allele observed — can occur codons others. heterozygous calls may also phased unphased, adding another layer detail. Furthermore, patterns missingness can vary individuals, causing denominator vary look along genome. many cases, particularly working aggregate counts extracted published studies, detailed information may incomplete entirely unavailable. Therefore, require encoding system flexible expressive: capable capturing complexity data available, overly restrictive situations certain aspects missing. drawback flexible encoding calculating prevalence becomes less straightforward. trade-somewhat unavoidable, flexibility data encoding simplicity prevalence calculation somewhat opposing goals. STAVE, prioritize achieving clean flexible data structure, ensuring relevant information captured. Prevalence calculations performed using dedicated member functions operate encoded data.","code":""},{"path":"/articles/tutorial_basic.html","id":"example-workflow","dir":"Articles","previous_headings":"","what":"Example workflow","title":"tutorial_basic","text":"Input data take form three tables. use pre-loaded example data , using data need match input format: Create STAVE object append data: data loaded, can always view different tables using get functions. However, alter values directly. can calculate prevalence variant using get_prevalence(): can also return list variants data: Finally, can selectively drop studies data using study ID:","code":"library(STAVE)  data(\"example_input\") #View(example_input$studies) #View(example_input$surveys) #View(example_input$counts) # create new object s <- STAVE_object$new()  # append data using a member function s$append_data(studies_dataframe = example_input$studies,               surveys_dataframe = example_input$surveys,               counts_dataframe = example_input$counts) #> data correctly appended # check how many studies are now loaded s #> Studies: 7 #> Surveys: 24 s$get_studies() |> head() #> # A tibble: 6 × 6 #>   study_ID            study_name       study_type authors publication_year url   #>   <chr>               <chr>            <chr>      <chr>              <dbl> <chr> #> 1 wwarn_10297_Nelson  wwarn_10297_Nel… peer_revi… Nelson              1000 http… #> 2 wwarn_10814_Dama    wwarn_10814_Dama peer_revi… Dama                1000 http… #> 3 wwarn_10992_Mallick wwarn_10992_Mal… peer_revi… Mallick             1000 http… #> 4 wwarn_11208_Kunasol wwarn_11208_Kun… peer_revi… Kunasol             1000 http… #> 5 wwarn_11435_Henry   wwarn_11435_Hen… peer_revi… Henry               1000 http… #> 6 wwarn_11720_Ould    wwarn_11720_Ould peer_revi… Ould                1000 http… s$get_surveys() |> head() #> # A tibble: 6 × 11 #>   study_key           survey_ID country_name site_name   lat   lon spatial_notes #>   <chr>               <chr>     <chr>        <chr>     <dbl> <dbl> <chr>         #> 1 wwarn_10297_Nelson  wwarn_10… Thailand     Kanchana…  15.3 98.5  wwarn lat an… #> 2 wwarn_10814_Dama    wwarn_10… Mali         Koulikoro  12.6 -8.14 wwarn lat an… #> 3 wwarn_10992_Mallick wwarn_10… India        Chhattis…  20.1 80.8  wwarn lat an… #> 4 wwarn_10992_Mallick wwarn_10… India        Goa        15.3 74.1  wwarn lat an… #> 5 wwarn_10992_Mallick wwarn_10… India        Gujarat    23.0 73.6  wwarn lat an… #> 6 wwarn_10992_Mallick wwarn_10… India        Heilongj…  88.3 27.2  wwarn lat an… #> # ℹ 4 more variables: collection_start <chr>, collection_end <chr>, #> #   collection_day <chr>, time_notes <chr> s$get_counts() |> head() #> # A tibble: 6 × 4 #>   survey_key                           variant_string variant_num total_num #>   <chr>                                <chr>                <dbl>     <dbl> #> 1 wwarn_10297_Nelson_Sangkhlaburi_2002 mdr1:184:F              27        49 #> 2 wwarn_10297_Nelson_Sangkhlaburi_2002 mdr1:86:Y                4        49 #> 3 wwarn_10814_Dama_Bamako_2014         crt:76:T               130       170 #> 4 wwarn_10814_Dama_Bamako_2014         mdr1:86:Y               46       158 #> 5 wwarn_10992_Mallick_Assam_2002       crt:76:T                26        26 #> 6 wwarn_10992_Mallick_Assam_2002       mdr1:86:Y               19        25 p <- s$get_prevalence(\"mdr1:184:F\") #View(p) s$get_variants() #> [1] \"crt:76:T\"   \"k13:469:F\"  \"k13:469:Y\"  \"k13:539:T\"  \"k13:580:Y\"  #> [6] \"k13:675:V\"  \"mdr1:184:F\" \"mdr1:86:Y\" s$drop_study(drop_study_ID = \"wwarn_10297_Nelson\") s #> Studies: 6 #> Surveys: 23"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bob Verity. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Verity B (2024). STAVE: Spatial-Temporal Aggregated Variant Encoding. R package version 1.0.0.","code":"@Manual{,   title = {STAVE: Spatial-Temporal Aggregated Variant Encoding},   author = {Bob Verity},   year = {2024},   note = {R package version 1.0.0}, }"},{"path":"/index.html","id":"stave","dir":"","previous_headings":"","what":"Spatial-Temporal Aggregated Variant Encoding","title":"Spatial-Temporal Aggregated Variant Encoding","text":"STAVE stands Spatial Temporal Aggregate Variant Encoding. R package designed storing managing aggregate spatial-temporal genetic data. “aggregate” mean data consist solely counts (numerator denominator), rather individual-level details. “spatial-temporal” mean observation tied specific geographic location (latitude longitude), precise collection time (single day). format ideally suited downstream analysis methods model prevalence spatial-temporal point process, also used areal methods. Although STAVE developed Plasmodium genetic data mind, can accommodate data organisms. core STAVE single class (R6 object) serves main data container. class enables users efficiently import, store, manipulate genetic data. operations, calculating prevalence, performed dedicated member functions. site describes STAVE data format. also contains installation instructions simple tutorials help get started.","code":""},{"path":"/reference/STAVE_object.html","id":null,"dir":"Reference","previous_headings":"","what":"STAVE data object (R6 class) — STAVE_object","title":"STAVE data object (R6 class) — STAVE_object","text":"main class stores data responsible data input, output, processing functions. functionality STAVE package class form member functions.","code":""},{"path":"/reference/STAVE_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"STAVE data object (R6 class) — STAVE_object","text":"raw data stored private variables within object, meaning () edited directly. Rather, tables can extracted using get_counts() similarly tables. three tables : studies: Information data came , example url     author names. study indexed unique study_ID. surveys: Information surveys represented within study.     survey defined discrete instance data collection,     includes information geography (latitude longitude) collection     time. Surveys given survey_IDs linked particular study     study_ID. counts: actual genetic information, linked     particular survey survey_ID. Genetic variants encoded     character strings must follow specified format, number     times variant observed among total sample stored     columns. combination linked tables allows efficient flexible encoding variants, avoiding unnecessary duplication information.","code":""},{"path":[]},{"path":"/reference/STAVE_object.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"STAVE data object (R6 class) — STAVE_object","text":"STAVE_object$print() STAVE_object$get_studies() STAVE_object$get_surveys() STAVE_object$get_counts() STAVE_object$get_version() STAVE_object$append_data() STAVE_object$get_prevalence() STAVE_object$get_variants() STAVE_object$drop_study() STAVE_object$clone()","code":""},{"path":"/reference/STAVE_object.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"STAVE data object (R6 class) — STAVE_object","text":"Custom print method control console output","code":""},{"path":"/reference/STAVE_object.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$print()"},{"path":"/reference/STAVE_object.html","id":"method-get-studies-","dir":"Reference","previous_headings":"","what":"Method get_studies()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract studies data.frames stored within object","code":""},{"path":"/reference/STAVE_object.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_studies()"},{"path":"/reference/STAVE_object.html","id":"method-get-surveys-","dir":"Reference","previous_headings":"","what":"Method get_surveys()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract surveys data.frames stored within object","code":""},{"path":"/reference/STAVE_object.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_surveys()"},{"path":"/reference/STAVE_object.html","id":"method-get-counts-","dir":"Reference","previous_headings":"","what":"Method get_counts()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract counts data.frames stored within object","code":""},{"path":"/reference/STAVE_object.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_counts()"},{"path":"/reference/STAVE_object.html","id":"method-get-version-","dir":"Reference","previous_headings":"","what":"Method get_version()","title":"STAVE data object (R6 class) — STAVE_object","text":"Extract version number STAVE object. important member functions STAVE object directly linked object , updated updating version package environment. update STAVE object new package version, first extract data load new STAVE object created recent version.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_version()"},{"path":"/reference/STAVE_object.html","id":"method-append-data-","dir":"Reference","previous_headings":"","what":"Method append_data()","title":"STAVE data object (R6 class) — STAVE_object","text":"Append new data","code":""},{"path":"/reference/STAVE_object.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$append_data(   studies_dataframe,   surveys_dataframe,   counts_dataframe )"},{"path":"/reference/STAVE_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"studies_dataframe data.frame containing information study level. data.frame must following columns: study_ID, study_name, study_type, authors, publication_year, url surveys_dataframe data.frame containing information survey level. data.frame must following columns: study_key, survey_ID, country_name, site_name, lat, lon, spatial_notes, collection_start, collection_end, time_notes. study_key element must correspond study_ID studies_dataframe. counts_dataframe data.frame genetic information. Must contain following columns: survey_key, variant_string, variant_num, total_num. survey_key element must correspond valid survey_ID surveys_dataframe.","code":""},{"path":"/reference/STAVE_object.html","id":"method-get-prevalence-","dir":"Reference","previous_headings":"","what":"Method get_prevalence()","title":"STAVE data object (R6 class) — STAVE_object","text":"Calculate prevalence","code":""},{"path":"/reference/STAVE_object.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_prevalence(   target_variant,   keep_ambiguous = FALSE,   prev_from_min = TRUE )"},{"path":"/reference/STAVE_object.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"target_variant name variant want calculate prevalence, example crt:72:C. Note can heterozygous calls within name. keep_ambiguous may variants data target_variant sample, proven conclusively. example, sequence A_A_A may match sequence /C_A/C_A may , unphased genotypes sure. keep_ambiguous = TRUE min max numerator reported either exclude ambiguous calls (min) include ambiguous calls (max). FALSE (default) min reported. prev_from_min output object includes point estimate prevalence along exact binomial confidence intervals. must calculated one numerator_min numerator_max case ambiguous calls. argument sets one numerators used calculation. @import dplyr","code":""},{"path":"/reference/STAVE_object.html","id":"method-get-variants-","dir":"Reference","previous_headings":"","what":"Method get_variants()","title":"STAVE data object (R6 class) — STAVE_object","text":"Return vector variants present data object.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$get_variants(report_haplo = FALSE)"},{"path":"/reference/STAVE_object.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"report_haplo (Boolean) TRUE list haplotypes. Otherwise, list locus--locus format. Defaults FALSE.","code":""},{"path":"/reference/STAVE_object.html","id":"method-drop-study-","dir":"Reference","previous_headings":"","what":"Method drop_study()","title":"STAVE data object (R6 class) — STAVE_object","text":"Drop one study_IDs data. drop internally stored data objects, including corresponding surveys counts data.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$drop_study(drop_study_ID)"},{"path":"/reference/STAVE_object.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"drop_study_ID vector study_IDs drop data objects.","code":""},{"path":"/reference/STAVE_object.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"STAVE data object (R6 class) — STAVE_object","text":"objects class cloneable method.","code":""},{"path":"/reference/STAVE_object.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"STAVE data object (R6 class) — STAVE_object","text":"","code":"STAVE_object$clone(deep = FALSE)"},{"path":"/reference/STAVE_object.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"STAVE data object (R6 class) — STAVE_object","text":"deep Whether make deep clone.","code":""},{"path":"/reference/allowed_amino_acids.html","id":null,"dir":"Reference","previous_headings":"","what":"String of allowed amino acids — allowed_amino_acids","title":"String of allowed amino acids — allowed_amino_acids","text":"Returns data.frame allowed amino acid single-letter codes. come IUPAC (International Union Pure Applied Chemistry), see details. Variants defined variant_string column counts data.frame must one single-letter codes, otherwise underscore (_), pipe (|) forward slash (/) symbols. Underscores removed allowed improved readability. pipe forward slash symbols represent phased unphased mixed calls, respectively.","code":""},{"path":"/reference/allowed_amino_acids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String of allowed amino acids — allowed_amino_acids","text":"","code":"allowed_amino_acids()"},{"path":"/reference/disallowed_variant_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Examples of invalid variant strings — disallowed_variant_strings","title":"Examples of invalid variant strings — disallowed_variant_strings","text":"Returns data.frame invalid variant strings, along reason invalid. Can useful understanding correct format. Also, data.frame used internal package testing, .e. every row data.frame return error.","code":""},{"path":"/reference/disallowed_variant_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Examples of invalid variant strings — disallowed_variant_strings","text":"","code":"disallowed_variant_strings()"},{"path":"/reference/example_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Input Dataset — example_input","title":"Example Input Dataset — example_input","text":"list containing three data.frames make STAVE object. correctly formatted, can used reference formatting data. studies come much reduced version WWARN data antimalaria resistance.","code":""},{"path":"/reference/example_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Input Dataset — example_input","text":"","code":"example_input"},{"path":"/reference/example_input.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Input Dataset — example_input","text":"list containing three data.frames","code":""},{"path":"/reference/example_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Input Dataset — example_input","text":"","code":"data(\"example_input\", package = \"STAVE\")"}]
